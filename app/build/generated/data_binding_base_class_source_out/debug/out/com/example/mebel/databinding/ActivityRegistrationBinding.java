// Generated by view binder compiler. Do not edit!
package com.example.mebel.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mebel.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegistrationBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText registerEmailEditText;

  @NonNull
  public final EditText registerLoginEditText;

  @NonNull
  public final EditText registerPasswordEditText;

  @NonNull
  public final Spinner registerRoleSpinner;

  @NonNull
  public final Button registerSubmitButton;

  private ActivityRegistrationBinding(@NonNull LinearLayout rootView,
      @NonNull EditText registerEmailEditText, @NonNull EditText registerLoginEditText,
      @NonNull EditText registerPasswordEditText, @NonNull Spinner registerRoleSpinner,
      @NonNull Button registerSubmitButton) {
    this.rootView = rootView;
    this.registerEmailEditText = registerEmailEditText;
    this.registerLoginEditText = registerLoginEditText;
    this.registerPasswordEditText = registerPasswordEditText;
    this.registerRoleSpinner = registerRoleSpinner;
    this.registerSubmitButton = registerSubmitButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegistrationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegistrationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_registration, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegistrationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.registerEmailEditText;
      EditText registerEmailEditText = ViewBindings.findChildViewById(rootView, id);
      if (registerEmailEditText == null) {
        break missingId;
      }

      id = R.id.registerLoginEditText;
      EditText registerLoginEditText = ViewBindings.findChildViewById(rootView, id);
      if (registerLoginEditText == null) {
        break missingId;
      }

      id = R.id.registerPasswordEditText;
      EditText registerPasswordEditText = ViewBindings.findChildViewById(rootView, id);
      if (registerPasswordEditText == null) {
        break missingId;
      }

      id = R.id.registerRoleSpinner;
      Spinner registerRoleSpinner = ViewBindings.findChildViewById(rootView, id);
      if (registerRoleSpinner == null) {
        break missingId;
      }

      id = R.id.registerSubmitButton;
      Button registerSubmitButton = ViewBindings.findChildViewById(rootView, id);
      if (registerSubmitButton == null) {
        break missingId;
      }

      return new ActivityRegistrationBinding((LinearLayout) rootView, registerEmailEditText,
          registerLoginEditText, registerPasswordEditText, registerRoleSpinner,
          registerSubmitButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
